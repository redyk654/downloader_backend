version: '3.8'

services:
  db:
    image: postgres:15
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    env_file: .env
    restart: unless-stopped

  web:
    build: .
    command: gunicorn myproject.wsgi:application --bind 0.0.0.0:8000
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    restart: unless-stopped

  celery:
    build: .
    command: celery -A myproject worker -l info -c 3
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/var/www/django_static:ro
      - media_volume:/var/www/django_media:ro
      # Volumes pour SSL/Certbot
      - ./nginx/ssl:/etc/letsencrypt:ro
      - ./nginx/certbot-www:/var/www/certbot:ro
      # Volume pour le frontend Vue.js
      - /var/www/vidown:/var/www/vidown-frontend:ro
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    env_file: .env
    ports:
      - "127.0.0.1:5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped

  # Exporter PostgreSQL pour Prometheus
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  # Exporter RabbitMQ pour Prometheus
  rabbitmq_exporter:
    image: kbudde/rabbitmq-exporter
    container_name: rabbitmq_exporter
    environment:
      - RABBIT_URL=http://rabbitmq:15672
      - RABBIT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBIT_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - PUBLISH_PORT=9419
      - OUTPUT_FORMAT=json
      - RABBIT_CAPABILITIES=no_sort,bert
    ports:
      - "9419:9419"
    depends_on:
      rabbitmq:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:
  static_volume:
  media_volume: